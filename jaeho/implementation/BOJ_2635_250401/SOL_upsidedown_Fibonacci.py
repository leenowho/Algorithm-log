'''
다음과 같은 규칙에 따라 수들을 만들려고 한다.

첫 번째 수로 양의 정수가 주어진다.
두 번째 수는 양의 정수 중에서 하나를 선택한다.
세 번째부터 이후에 나오는 모든 수는 앞의 앞의 수에서 앞의 수를 빼서 만든다. 예를 들어, 세 번째 수는 첫 번째 수에서 두 번째 수를 뺀 것이고, 네 번째 수는 두 번째 수에서 세 번째 수를 뺀 것이다.
음의 정수가 만들어지면, 이 음의 정수를 버리고 더 이상 수를 만들지 않는다.
첫 번째 수로 100이 주어질 때, 두 번째 수로 60을 선택하여 위의 규칙으로 수들을 만들면 7개의 수들 100, 60, 40, 20, 20 , 0, 20이 만들어진다. 그리고 두 번째 수로 62를 선택하여 위의 규칙으로 수들을 만들면 8개의 수들 100, 62, 38, 24, 14, 10, 4, 6이 만들어진다. 위의 예에서 알 수 있듯이, 첫 번째 수가 같더라도 두 번째 수에 따라서 만들어지는 수들의 개수가 다를 수 있다.

입력으로 첫 번째 수가 주어질 때, 이 수에서 시작하여 위의 규칙으로 만들어지는 최대 개수의 수들을 구하는 프로그램을 작성하시오. 최대 개수의 수들이 여러 개일 때, 그중 하나의 수들만 출력하면 된다.
'''
import sys
sys.stdin = open('input.txt','r')
#########################################



def re_fi(N):
    best_seq = []  # 가장 긴 수열을 저장할 변수
    for second in range(1, N + 1):  # 두 번째 수를 1부터 N까지 탐색
        seq = [N, second]  # 첫 번째 수 N과 두 번째 수 second로 시작하는 수열
        # 두 번째 수부터 규칙에 따라 수열 생성
        while seq[-2] >= seq[-1]:  # 음의 수가 나오지 않도록 조건 확인
            seq.append(seq[-2] - seq[-1])  # 수열의 마지막 두 값을 빼서 새로운 수를 추가
        # 수열 길이가 가장 길면 업데이트
        if len(seq) > len(best_seq):
            best_seq = seq  # 현재까지 가장 긴 수열 업데이트
    return best_seq
# 첫 번째 수 입력 받기
N = int(input())  # 첫 번째 수 N을 입력받음
# 가장 긴 수열 찾기
result = re_fi(N)  # re_fi 함수를 호출하여 가장 긴 수열을 찾음
# 결과 출력
print(len(result))  # 수열의 길이 출력
print(*result)  # 수열의 내용 출력


#testset